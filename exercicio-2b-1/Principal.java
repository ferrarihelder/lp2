import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author alunos
 */
public class Tela extends javax.swing.JFrame {

    /**
     * Creates new form Tela
     */
    public Tela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        labelNome = new javax.swing.JLabel();
        inputNome = new javax.swing.JTextField();
        labelData = new javax.swing.JLabel();
        inputData = new javax.swing.JTextField();
        labelTelefone = new javax.swing.JLabel();
        inputTelefone = new javax.swing.JTextField();
        labelEndereco = new javax.swing.JLabel();
        inputEndereco = new javax.swing.JTextField();
        botaoAdicionar = new javax.swing.JButton();
        botaoSalvar = new javax.swing.JButton();
        botaoRemover = new javax.swing.JButton();
        Scroll = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelNome.setText("Nome: ");

        inputNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputNomeFocusGained(evt);
            }
        });
        inputNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNomeActionPerformed(evt);
            }
        });

        labelData.setText("Data Nascimento:");

        inputData.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputDataFocusGained(evt);
            }
        });
        inputData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputDataActionPerformed(evt);
            }
        });

        labelTelefone.setText("Telefone:");

        inputTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputTelefoneFocusGained(evt);
            }
        });
        inputTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTelefoneActionPerformed(evt);
            }
        });

        labelEndereco.setText("Endereço:");

        inputEndereco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputEnderecoFocusGained(evt);
            }
        });
        inputEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputEnderecoActionPerformed(evt);
            }
        });

        botaoAdicionar.setText("Adicionar");
        botaoAdicionar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                botaoAdicionarFocusGained(evt);
            }
        });
        botaoAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAdicionarActionPerformed(evt);
            }
        });

        botaoSalvar.setText("Salvar");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        botaoRemover.setText("Remover");
        botaoRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemoverActionPerformed(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Data Nascimento", "Telefone", "Endereço"
            }
        ));
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        Scroll.setViewportView(tabela);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoAdicionar)
                .addGap(18, 18, 18)
                .addComponent(botaoSalvar)
                .addGap(18, 18, 18)
                .addComponent(botaoRemover)
                .addGap(49, 49, 49))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelEndereco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(inputEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelTelefone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(inputTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelData)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                .addComponent(inputData, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(inputNome, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(44, 44, 44))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelData)
                    .addComponent(inputData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTelefone)
                    .addComponent(inputTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEndereco)
                    .addComponent(inputEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAdicionar)
                    .addComponent(botaoSalvar)
                    .addComponent(botaoRemover))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(278, 278, 278))
        );

        pack();
    }// </editor-fold>                        

    private void inputNomeActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void inputDataActionPerformed(java.awt.event.ActionEvent evt) {                                          
                  inputData.setText(""); 
    }                                         

    private void inputTelefoneActionPerformed(java.awt.event.ActionEvent evt) {                                              
                  inputTelefone.setText(""); 
    }                                             

    private void inputEnderecoActionPerformed(java.awt.event.ActionEvent evt) {                                              
                  inputEndereco.setText(""); 
    }                                             

    private void botaoAdicionarFocusGained(java.awt.event.FocusEvent evt) {                                           
      
    }                                          

    private void inputNomeFocusGained(java.awt.event.FocusEvent evt) {                                      
                 inputNome.setText(""); 
    }                                     

    private void botaoRemoverActionPerformed(java.awt.event.ActionEvent evt) {                                             
    DefaultTableModel dtm = (DefaultTableModel) tabela.getModel();
        int rowSelected = tabela.getSelectedRow();//retorna um inteiro mostrando qual linha foi selecionada (se o valor for -1 não foi selecionada nenhuma linha)
        
            if(rowSelected == -1){//entra nesse caso se nenhuma linha foi selecionada e mostra a mensagem 
                JOptionPane.showMessageDialog(this, "Selecione a linha que quer remover antes de clicar no botão! "); //Se usa o this pq está referenciando o proprio Jframe
            }
            else{
                int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja remover a linha selecionada?", "Confirme sua operação", JOptionPane.YES_NO_OPTION); //mostra uma tela de opção
                if(opcao == JOptionPane.YES_OPTION) //se foi selecionada a opção sim, a linha é removida
                    dtm.removeRow(rowSelected);//aqui, o parâmetro é a linha que foi selecionada, que mostra-se o número indiocador dela 
            }
                      // TODO add your handling code here:
    }                                            

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tabela.getModel();
        int rowSelected = tabela.getSelectedRow();
        String nome, dataNascimento, telefone, endereco;

        nome = inputNome.getText();
        dataNascimento = inputData.getText();
        telefone = inputTelefone.getText();
        endereco = inputEndereco.getText();

        if (nome.equals("") || dataNascimento.equals("") || telefone.equals("") || endereco.equals("")) {
            JOptionPane.showMessageDialog(this, "Não pode haver valor vazio");
        } else if (rowSelected == -1) {
            dtm.addRow(new String[]{nome, dataNascimento, telefone, endereco});
        } else {
            dtm.setValueAt(nome, rowSelected, 0);
            dtm.setValueAt(dataNascimento, rowSelected, 1);
            dtm.setValueAt(telefone, rowSelected, 2);
            dtm.setValueAt(endereco, rowSelected, 3);
        }
        
    }                                           

    private void botaoAdicionarActionPerformed(java.awt.event.ActionEvent evt) {                                               
    
          String nome, data, telefone, endereco; 
        
        nome = inputNome.getText(); //pega o valor digitado no campo CPF
        data = inputData.getText();
        telefone = inputTelefone.getText();
        endereco = inputEndereco.getText();
        
        
        if ( nome.equals("") || data.equals("") || telefone.equals("") || endereco.equals("")){ //se o valor do campo é igual a CPF/Login  mostra a mensagem
            JOptionPane.showMessageDialog(this, "Não pode haver preenchimento vazio");
            
        }
        else{
            DefaultTableModel dtm = (DefaultTableModel) tabela.getModel();//pega as propriedades da tabela e adiciona no modelo default
            String a [] = new String[] {nome, data, telefone, endereco}; //adiciona um vetor que guarda os valores dos campos
            dtm.addRow( a ); //se o valor do campo é diferente, quando da salvar adiciona uma linha com os valores que foram digitados no vetor string a 
        }
    }                                              

    private void inputDataFocusGained(java.awt.event.FocusEvent evt) {                                      
        inputData.setText("");
        // TODO add your handling code here:
    }                                     

    private void inputTelefoneFocusGained(java.awt.event.FocusEvent evt) {                                          
        // TODO add your handling code here:
        inputTelefone.setText("");
    }                                         

    private void inputEnderecoFocusGained(java.awt.event.FocusEvent evt) {                                          
        // TODO add your handling code here:
        inputEndereco.setText("");
    }                                         

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {                                    

        DefaultTableModel dtm = (DefaultTableModel) tabela.getModel();
        int rowSelected = tabela.getSelectedRow();

        inputNome.setText(dtm.getValueAt(rowSelected, 0).toString());
        inputData.setText(dtm.getValueAt(rowSelected, 1).toString());
        inputTelefone.setText(dtm.getValueAt(rowSelected, 2).toString());
        inputEndereco.setText(dtm.getValueAt(rowSelected, 3).toString());
    }
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JScrollPane Scroll;
    private javax.swing.JButton botaoAdicionar;
    private javax.swing.JButton botaoRemover;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JTextField inputData;
    private javax.swing.JTextField inputEndereco;
    private javax.swing.JTextField inputNome;
    private javax.swing.JTextField inputTelefone;
    private javax.swing.JLabel labelData;
    private javax.swing.JLabel labelEndereco;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelTelefone;
    private javax.swing.JTable tabela;
    // End of variables declaration                   
}
